###############################################################################
#
#  PACKAGE:  Raspberry Pi Data Acquisition and Control System (PiDACS)
#     FILE:  option
#    TITLE:  Optionally install and start the PiDACS server daemon
# FUNCTION:  Install, enable, and start the PiDACS server daemon using systemd.
#    USAGE:  Use with papamac's personal package utility (p2pkg).  See below.
#   AUTHOR:  papamac
#  VERSION:  1.0.4
#     DATE:  April 16, 2020
#
#
# MIT LICENSE:
#
# Copyright (c) 2019-2020 David A. Krause, aka papamac
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
#
# DESCRIPTION:
#
# The option script installs, enables, and starts the PiDACS server daemon unit
# file (pidacsd.service) that has already been downloaded to the src sub-
# directory of the current working directory (src/pidacs).  It uses the -O
# option_arg argument to pass an optional IP port number to the server daemon
# via the unit file execution command line.  If -O is not specified, the server
# daemon uses its built-in default IP port number.  option also uses any
# optional positional arguments (from p2pkg) to pass I/O port names to the
# daemon, also through the execution command line.  If no optional positional
# arguments are specified then the default I/O port names in the unit file are
# used.
#
# I/O port names must be specified for all hardware devices on a specific
# Raspberry Pi that will be accessed by the server daemon.  Port names for
# currently supported devices are listed in the following table:
#
#  Device    |Description                                        |Port Name(s)
# -----------|---------------------------------------------------|------------
# BCM2835,6,7|Baseline GPIO set (GPIOs 17-18, 22-25, 27)         |gg0/gp0
# BCM2835,6,7|Extended GPIO set (GPIOs 5-6, 12-13, 16, 19-21, 26)|gg1/gp1
# MCP23008   |8-Bit I/O Expander                                 |ga#
# MCP23017   |16-Bit I/O Expander (A Port)                       |ga#
# MCP23017   |16-Bit I/O Expander (B Port)                       |gb#
# MCP3204    |4-Channel 12-Bit A/D Converter                     |ad#
# MCP3208    |8-Channel 12-Bit A/D Converter                     |ae#
# MCP3422,3  |2-Channel 18-Bit A/D Converter                     |aa#
# MCP3424    |4-Channel 18-Bit A/D Converter                     |ab#
# MCP4821    |1-Channel 12-Bit D/A Converter                     |da#
# MCP4822    |2-Channel 12-Bit D/A Converter                     |db#
#
# Before starting, option checks to see if the PiDACS package has been
# installed.  If not, it aborts the option execution.  If so, option copies
# the daemon unit file (src/pidacs/pidacsd.service) to a user library on the
# systemd search path (/usr/local/lib/systemd/system).  It then edits the unit
# file in place to reference the current working directory and add the IP port
# number and the I/O port names to the executable command line.  Finally,
# option enables the unit file and restarts the daemon using the systemd
# systemctl utility.
#
# option is designed to be used with papamac's personal package utility
# (p2pkg).  Normally, the PiDACS package is downloaded to the current working
# directory using ftp (p2pkg -f) or git (p2pkg -g) and then installed
# (p2pkg -i).  Following this, the daemon can optionally be installed using
# this option script (p2pkg -o).  Usage examples are as follows:
#
# sudo p2pkg -o PiDACS ab0 ab1          # Install the PiDACS daemon for the
#                                         defaule IP port number and port names
#                                         ab0 and ab1.
# cd /usr/local                         # Install the PIDACS deamon from
# sudo p2pkg -O 52000 ga0 gg1             /usr/local/pidacs/src using the IP
#                                         port number 52000 and port names ga0
#                                         and gg1.
# cd /usr/local                         # Same as above, but first download the
# sudo p2pkg -giO 52000 PiDACS ga0 gg1    PiDACS package from github and
#                                         install it in /usr/local.
#
#
# DEPENDENCIES/LIMITATIONS:
#
# option must be run using sudo because it copies and edits files in the root-
# owned directory /usr/local/lib/systemd/system.
#
###############################################################################

daemon_name=${pkg_name_lower}d          # daemon name.
daemon_unit=$daemon_name.service        # systemd unit file for the daemon.
systemd=/usr/local/lib/systemd/system   # user library on the systemd search
#                                         path.

# Ensure that the PiDACS package has been downloaded and installed.

if [[ ! -f $bin/pidacs-s ]]; then
    errmsg "option: $pkg_name not installed; option aborted"
    echo_exit 1
fi

# Copy the daemon unit file from src/pidacs to /usr/local/lib/systemd/system.
# Change the prefix in the unit file executable path name to the current
# working directory.

infomsg "$g${t}option:$n installing $c$t$daemon_unit$n in $b$t$systemd$n"
mkdir -p $systemd
cp $pkg/$daemon_unit $systemd
sed -i "s|/usr/local|$PWD|" $systemd/$daemon_unit

# Optionally add the IP port number to the unit file executable command line.

if [[ $option_arg ]]; then
    infomsg "$g${t}option:$n setting the IP port number to $m$t$option_arg$n"
    sed -i "s|-l DATA|-l DATA -P $option_arg|" $systemd/$daemon_unit
fi

# Optionally replace the default I/O port names in the unit file executable
# command line.

if [[ $args ]]; then
    infomsg "$g${t}option:$n setting I/O port names to $m$t$args$n"
    sed -i "s|gg0 gg1|$args|" $systemd/$daemon_unit
fi

# Enable the daemon unit and restart the daemon.

infomsg "$g${t}option:$n enabling $c$t$daemon_unit$n and restarting $m$t$daemon_name$n"
systemctl enable $systemd/$daemon_unit
systemctl restart $daemon_name
systemctl status $daemon_name